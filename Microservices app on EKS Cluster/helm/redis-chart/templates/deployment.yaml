apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}
spec:
  replicas: {{ .Values.appReplicas }}
  selector:
    matchLabels:
      app: {{ .Values.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}
    spec:
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000    
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ .Values.appName }}
            topologyKey: "topology.kubernetes.io/hostname"
          - labelSelector:
              matchExpressions:            
              - key: app
                operator: In
                values:
                - {{ .Values.appName }}
            topologyKey: "topology.kubernetes.io/zone"      
      containers:
      - name: redis
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - all
          privileged: false
          readOnlyRootFilesystem: true      
        image: {{ .Values.appImage }}
        ports:
        - containerPort: {{ .Values.containerPort }}
        readinessProbe:
          periodSeconds: {{ .Values.periodSeconds }}
          tcpSocket:
            port: {{ .Values.containerPort }}
        livenessProbe:
          periodSeconds: {{ .Values.periodSeconds }}
          tcpSocket:
            port: {{ .Values.containerPort }}
        volumeMounts:
        - mountPath: {{ .Values.mountPath }}
          name: {{ .Values.volumeName }}
        resources:
          limits:
            memory: {{ .Values.memLimits }}
            cpu: {{ .Values.cpuLimits }}
          requests:
            cpu: {{ .Values.cpuRequests }}
            memory: {{ .Values.memRequests }}         
      volumes:
      - name: {{ .Values.volumeName }}
        emptyDir: {}